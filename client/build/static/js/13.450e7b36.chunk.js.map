{"version":3,"sources":["components/Pages/Cart.js"],"names":["Cart","navigate","useNavigate","total_amount","dispatch","useDispatch","cartCount","useSelector","state","isLoggedIn","uid","useState","rerender","setrerender","Products","mycarT","setmycarT","useEffect","localStorage","getItem","mycart","JSON","parse","tempArr","idy","obj","push","style","padding","className","fontWeight","map","elem","cart_item","index","_id","Object","keys","src","product_image","base64","height","width","product_name","product_producer","color","onClick","id","quantity","arr","Number","arrObj","setItem","stringify","decProductCountFunc","border","incProductCountFunc","product_cost","a","b","splice","type","payload","deleteCartProduct","fontSize","toFixed","undefined","Odata","user_id","amount","productData","to"],"mappings":"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","file":"static/js/13.450e7b36.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useNavigate } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nexport default function Cart() {\r\n    let navigate = useNavigate();\r\n    var total_amount = 0;\r\n    const dispatch = useDispatch();\r\n    const cartCount = useSelector(state => state.cartCount)\r\n    const isLoggedIn = useSelector(state => state.isLoggedIn)\r\n    const uid = useSelector(state => state.uid)\r\n    const [rerender, setrerender] = useState(false)\r\n    const Products = useSelector(state => state.Products)\r\n    const [mycarT, setmycarT] = useState([])\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"myCart\")) {\r\n            let mycart = JSON.parse(localStorage.getItem(\"myCart\"))\r\n            let tempArr = [];\r\n            for (let idy in mycart) {\r\n                const obj = { [idy]: mycart[idy] }\r\n                tempArr.push(obj)\r\n            }\r\n            setmycarT(tempArr)\r\n        }\r\n    }, [])\r\n    const TotalPriceFunc = (a, b) => {\r\n        total_amount += (Number(a) * Number(b))\r\n        return (Number(a) * Number(b))\r\n    }\r\n    const incProductCountFunc = (id, quantity, index) => {\r\n        total_amount = 0\r\n        let arr = mycarT;\r\n        arr[index][id] = Number(quantity) + 1;\r\n        setmycarT(arr)\r\n        let arrObj = {}\r\n        arr.map(elem => {\r\n            arrObj[(Object.keys(elem))[0]] = elem[(Object.keys(elem))[0]]\r\n        })\r\n        localStorage.setItem(\"myCart\", JSON.stringify(arrObj))\r\n        setrerender(!rerender)\r\n    }\r\n    const decProductCountFunc = (id, quantity, index) => {\r\n        if (quantity > 0) {\r\n            total_amount = 0\r\n            let arr = mycarT;\r\n            arr[index][id] = Number(quantity) - 1;\r\n            setmycarT(arr)\r\n            let arrObj = {}\r\n            arr.map(elem => {\r\n                arrObj[(Object.keys(elem))[0]] = elem[(Object.keys(elem))[0]]\r\n            })\r\n            localStorage.setItem(\"myCart\", JSON.stringify(arrObj))\r\n            setrerender(!rerender)\r\n        }\r\n    }\r\n    const deleteCartProduct = (index) => {\r\n        let arr = mycarT;\r\n        total_amount = 0\r\n        arr.splice(index, 1)\r\n        setmycarT(arr)\r\n        let arrObj = {}\r\n        arr.map(elem => {\r\n            arrObj[(Object.keys(elem))[0]] = elem[(Object.keys(elem))[0]]\r\n        })\r\n        localStorage.setItem(\"myCart\", JSON.stringify(arrObj))\r\n        dispatch({type:\"CARTCOUNT\", payload: (Number(cartCount)-1)})\r\n        setrerender(!rerender)\r\n    }\r\n    const proceedToBuyFunc = () => {\r\n        if (uid._id != undefined) {\r\n            const Odata = { user_id: uid._id, amount: ((95 * total_amount) / 100), productData: JSON.stringify(mycarT) }\r\n            localStorage.setItem(\"cart_products\", JSON.stringify(Odata))\r\n            navigate('/checkout')\r\n        }\r\n    }\r\n    return (\r\n        <div style={{ padding: \"20px\" }} className=\"row m-auto\">\r\n            <div className=\"col-md-9 col-sm-12 m-auto\">\r\n                <div className=\"cartPageLeft\">\r\n                    <div className=\"cartPageLeft1 row\">\r\n                        <div className=\"col-sm-6\">\r\n                            <span style={{ fontWeight: \"bold\" }}>Product</span>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <span style={{ fontWeight: \"bold\" }}>Quantity</span>\r\n                        </div>\r\n                        <div className=\"col-sm-1\">\r\n                            <span style={{ fontWeight: \"bold\" }}>Price</span>\r\n                        </div>\r\n                        <div className=\"col-sm-2 text-center\">\r\n                            <span style={{ fontWeight: \"bold\" }}>Total</span>\r\n                        </div>\r\n                        <div className=\"col-sm-1\">\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"productRender\">\r\n                        {Products.map(elem => (\r\n                            mycarT.map((cart_item, index) => {\r\n                                if (elem._id === Object.keys(cart_item)[0]) {\r\n                                    return <>\r\n                                        <div className=\"cartPageLeft2 row\">\r\n                                            <div className=\"col-sm-6 row psettinginsm6\">\r\n                                                <div className=\"col-sm-4\">\r\n                                                    <img src={elem.product_image[0].base64} height=\"120px\" width=\"120px\" />\r\n                                                </div>\r\n                                                <div className=\"col-sm-8\">\r\n                                                    <p><span style={{ fontWeight: \"bold\" }}>{elem.product_name}</span><br />By: {elem.product_producer}<br />Status: <span style={{ color: \"green\" }}>In Stock</span> </p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-2 text-center\">\r\n                                                <br /><br /><button onClick={() => decProductCountFunc(elem._id, cart_item[elem._id], index)} className=\"quantityBtn\">-</button>\r\n                                                <span style={{ border: \"1px solid rgb(204, 204, 204)\", padding: \"5px 10px 5px 10px\" }}>{cart_item[elem._id]}</span>\r\n                                                <button onClick={() => incProductCountFunc(elem._id, cart_item[elem._id], index)} className=\"quantityBtn\">+</button>\r\n                                            </div>\r\n                                            <div className=\"col-sm-1 text-center\">\r\n                                                <br /><br /><span style={{ fontWeight: \"bold\" }}>{elem.product_cost}</span>\r\n                                            </div>\r\n                                            <div className=\"col-sm-2 text-center\">\r\n                                                <br /><br /><span style={{ fontWeight: \"bold\" }}>{TotalPriceFunc(Number(cart_item[elem._id]), Number(elem.product_cost))}</span>\r\n                                            </div>\r\n                                            <div className=\"col-sm-1 text-center\">\r\n                                                <br /><br /><button onClick={() => deleteCartProduct(index)}><i style={{ color: \"#de0d2c\", fontSize: \"24px\" }} className=\"fa fa-trash\"></i></button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr />\r\n                                    </>\r\n                                }\r\n                            })\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-3 col-sm-12 \">\r\n                <div style={{ border: \"1px solid rgb(204, 204, 204)\", padding: \"20px\" }}>\r\n                    <h3>Review Order</h3><br />\r\n                    <p className=\"reviewP\">Subtotal:<pre className=\"d-inline\">             </pre> {(total_amount > 0 ? total_amount : 0).toFixed(2)}</p><hr />\r\n                    <p className=\"reviewP\">GST(5%):<pre className=\"d-inline\">             </pre> {(total_amount > 0 ? (5 * total_amount) / 100 : 0).toFixed(2)} </p><hr />\r\n                    <p className=\"reviewP orderTotal\">Order Total:<pre className=\"d-inline\">         </pre> {(total_amount > 0 ? (95 * total_amount) / 100 : 0).toFixed(2)}</p><br />\r\n                    {isLoggedIn?\r\n                    <button style={{ width: \"100%\" }} onClick={proceedToBuyFunc} className=\"btn btn-primary\">Proceed To Buy</button>\r\n                    :\r\n                    <Link to=\"/login\" style={{ width: \"100%\" }} className=\"btn btn-primary\">Proceed To Buy</Link>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}