{"version":3,"sources":["components/Pages/Checkout.js"],"names":["Checkout","navigate","useNavigate","dispatch","useDispatch","useState","selected_address","setselected_address","cardnumberref","useRef","cvvref","validityref","rerender","setrerender","cardnumber","cvv","validity","errorState","seterrorState","address","useSelector","state","uid","total_amount","settotal_amount","cartProducts","setcartProducts","useEffect","undefined","localStorage","getItem","temp","JSON","parse","Number","amount","handler","e","target","name","value","errors","length","addresshandler","style","width","className","border","padding","id","map","elem","type","first_name","last_name","city","country","pincode","onChange","mobile","to","color","marginBottom","ref","placeholder","toFixed","onClick","Object","values","forEach","val","final_data","addOrder","then","res","data","success","setItem","stringify","payload","setCart","email","cartData","token","alert","message"],"mappings":"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","file":"static/js/14.775674e4.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport {addOrder,setCart} from \"../../config/Myservices\"\r\nexport default function Checkout() {\r\n    let navigate = useNavigate()\r\n    const dispatch = useDispatch(); \r\n    const [selected_address, setselected_address] = useState(null)\r\n    const cardnumberref = useRef(null)\r\n    const cvvref = useRef(null)\r\n    const validityref = useRef(null)\r\n    const [rerender, setrerender] = useState(false)\r\n    const [errorState, seterrorState] = useState({ cardnumber: \"\", cvv: \"\", validity: \"\" });\r\n    const address = useSelector(state => state.address)\r\n    const uid = useSelector(state => state.uid)\r\n    const [total_amount, settotal_amount] = useState(0)\r\n    const [cartProducts, setcartProducts] = useState({})\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"cart_products\") != undefined) {\r\n            let temp = JSON.parse(localStorage.getItem(\"cart_products\"))\r\n            settotal_amount((Number(temp.amount)*100)/95)\r\n            setcartProducts(temp)\r\n        }\r\n    }, [])\r\n    const handler = (e) => {\r\n        const { name, value } = e.target;\r\n        let errors = errorState;\r\n        switch (name) {\r\n            case 'cardnumber':\r\n                errors.cardnumber = value.length != 16 ? 'invalid card number' : '';\r\n                break;\r\n            case 'cvv':\r\n                errors.cvv = value.length != 3 ? 'Invalid cvv' : '';\r\n                break;\r\n            case 'validity':\r\n                errors.validity = value.length != 5 ? 'Invalid date' : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        seterrorState(errors);\r\n        setrerender(!rerender)\r\n    }\r\n    const addresshandler = (e) => {\r\n        const { value } = e.target\r\n        setselected_address(value)\r\n    }\r\n    const validate = (errors) => {\r\n        let valid = true;\r\n        Object.values(errors).forEach((val) => val.length > 0 && (valid = false));\r\n        selected_address == null ? valid = false : valid = true;\r\n        return valid;\r\n    }\r\n    const proceedToBuyFunc = () => {\r\n        if (validate(errorState)) {\r\n            const final_data = cartProducts\r\n            final_data['_address'] = selected_address\r\n            final_data['token'] = localStorage.getItem('token')\r\n            addOrder(final_data).then(res => {\r\n                if (res.data.success) {\r\n                    localStorage.setItem(\"myCart\",JSON.stringify({}))\r\n                    dispatch({type:\"CARTCOUNT\", payload:0})\r\n                    setCart({email:uid.email, cartData:JSON.stringify({}), token: localStorage.getItem('token') }) \r\n                    navigate(\"/order\")\r\n                }\r\n                else {\r\n                    alert(res.data.message)\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            alert(\"check all fields\")\r\n        }\r\n    }\r\n    return (\r\n        <div style={{ width: \"95%\" }} className=\"m-auto\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9 col-sm-12\">\r\n                    <h2>Checkout Page</h2><hr />\r\n                    <div style={{ border: \"1px solid rgb(226 225 225)\", padding: \"10px\" }}>\r\n                        <p id=\"deliveryAddress\">DELIVERY ADDRESS</p>\r\n                        {address.map(elem =>\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" value={uid.first_name + ' ' + uid.last_name + ' ' + elem.address + ', ' + elem.city + ', ' + elem.state + ', ' + elem.country + ', ' + elem.pincode} onChange={addresshandler} />\r\n                                <div>\r\n                                    <p>{uid.first_name + ' ' + uid.last_name} <span>Mobile</span> {uid.mobile}</p>\r\n                                    <p>{elem.address + ', ' + elem.city + ', ' + elem.state + ', ' + elem.country + ', ' + elem.pincode}</p>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        <Link className=\"btn btn-outline-primary\" to=\"/myAccount/address\">+Address</Link>\r\n                    </div>\r\n                    <hr />\r\n                    <div style={{ border: \"1px solid rgb(226 225 225)\", padding: \"10px\" }}>\r\n                        <p id=\"paymentOption\">PAYMENT OPTION</p>\r\n                        <div className=\"cardDetails\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <p style={{ color: \"black\", marginBottom: \"0px\" }}> Card Number <span style={{ color: \"red\" }}>{errorState.cardnumber}</span></p>\r\n                                    <div className=\"wrap-input100\">\r\n                                        <input className=\"input100\" onChange={handler} type=\"text\" name=\"cardnumber\" ref={cardnumberref} placeholder=\"xxxx-xxxx-xxxx-xxxx\" />\r\n                                        <span className=\"focus-input100\"></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-3\">\r\n                                    <p style={{ color: \"black\", marginBottom: \"0px\" }}> Cvv <span style={{ color: \"red\" }}>{errorState.cvv}</span></p>\r\n                                    <div className=\"wrap-input100\">\r\n                                        <input className=\"input100\" onChange={handler} type=\"text\" name=\"cvv\" ref={cvvref} placeholder=\"xxx\" />\r\n                                        <span className=\"focus-input100\"></span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <p style={{ color: \"black\", marginBottom: \"0px\" }}> Validity <span style={{ color: \"red\" }}>{errorState.validity}</span></p>\r\n                                    <div className=\"wrap-input100\">\r\n                                        <input className=\"input100\" onChange={handler} type=\"text\" name=\"validity\" ref={validityref} placeholder=\"xx/20xx\" />\r\n                                        <span className=\"focus-input100\"></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-3 col-sm-12\">\r\n                    <div style={{ border: \"1px solid rgb(204, 204, 204)\", padding: \"20px\" }}>\r\n                        <h3>Cart Details   </h3><br />\r\n                        <p className=\"reviewP\">Subtotal: <pre className=\"d-inline\">             </pre>{(total_amount > 0 ? total_amount : 0).toFixed(2)}</p><hr />\r\n                        <p className=\"reviewP\">GST(5%): <pre className=\"d-inline\">            </pre> {(total_amount > 0 ? (5 * total_amount) / 100 : 0).toFixed(2)} </p><hr />\r\n                        <p className=\"reviewP orderTotal\">Order Total: <pre className=\"d-inline\">        </pre> {(total_amount > 0 ? (95 * total_amount) / 100 : 0).toFixed(2)}</p><br />\r\n                        <button style={{ width: \"100%\" }} onClick={proceedToBuyFunc} className=\"btn btn-primary\">Place order</button>\r\n                    </div>\r\n                </div>\r\n            </div><br /><br />\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}