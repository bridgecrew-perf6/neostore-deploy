{"version":3,"sources":["components/Pages/ProductPage.js"],"names":["ProductPage","dispatch","useDispatch","navigate","useNavigate","useEffect","getColor","then","res","data","success","setcolor","cdata","getCategories","setcategories","fetchproduct","setproducts","useState","filtercategory","setfiltercategory","filtercolor","setfiltercolor","color","categories","products","console","log","style","width","className","onClick","type","id","map","elem","_id","filterArgs","category_id","color_id","category_name","color_name","length","src","product_image","base64","height","alt","product_name","product_cost","product_rating","fontSize","undefined","localStorage","getItem","arr","JSON","parse","Object","keys","includes","String","val","temp2","payload","setItem","stringify","addToCart"],"mappings":"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","file":"static/js/18.b9042a79.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getColor, getCategories, fetchproduct } from '../../config/Myservices';\r\nexport default function ProductPage() {\r\n    let dispatch = useDispatch();\r\n    let navigate = useNavigate();\r\n    useEffect(() => {\r\n        getColor().then(res => {\r\n            if (res.data.success) {\r\n                setcolor(res.data.cdata)\r\n            }\r\n        })\r\n        getCategories().then(res => {\r\n            if (res.data.success) {\r\n                setcategories(res.data.cdata)\r\n            }\r\n        })\r\n        fetchproduct().then(res => {\r\n            setproducts(res.data)\r\n        })\r\n    }, [])\r\n    const [rerender, setrerender] = useState(true);\r\n    const [filtercategory, setfiltercategory] = useState(null);\r\n    const [filtercolor, setfiltercolor] = useState(null);\r\n    const [color, setcolor] = useState([])\r\n    const [categories, setcategories] = useState([])\r\n    const [products, setproducts] = useState([]);\r\n    const productDetailFunc = (id) => {\r\n        navigate(`/productDetail/${id}`)\r\n    }\r\n    const addToCart = (id) => {\r\n        if (localStorage.getItem(\"myCart\") != undefined) {\r\n            let arr = JSON.parse(localStorage.getItem(\"myCart\"));\r\n            if ((Object.keys(arr)).includes(String(id))) {\r\n                var val = arr[id];\r\n                arr[id] = val + 1;\r\n                let temp2 = Object.keys(arr);\r\n                dispatch({ type: \"CARTCOUNT\", payload: temp2.length });\r\n                localStorage.setItem(\"myCart\", JSON.stringify(arr));\r\n            }\r\n            else {\r\n                arr[id] = 1;\r\n                let temp2 = Object.keys(arr);\r\n                dispatch({ type: \"CARTCOUNT\", payload: temp2.length });\r\n                localStorage.setItem(\"myCart\", JSON.stringify(arr));\r\n            }\r\n        }\r\n        else {\r\n            let arr = { [id]: 1 }\r\n            let temp2 = Object.keys(arr);\r\n            dispatch({ type: \"CARTCOUNT\", payload: temp2.length });\r\n            localStorage.setItem(\"myCart\", JSON.stringify(arr))\r\n        }\r\n    }\r\n    const setCategoryFunc = (id) => {\r\n        setfiltercategory(id)\r\n        if (filtercolor != null) {\r\n            fetchproduct({ filterArgs: { category_id: id, color_id: filtercolor } }).then(res => {\r\n                setproducts(res.data)\r\n            })\r\n        }\r\n        else {\r\n            fetchproduct({ filterArgs: { category_id: id } }).then(res => {\r\n                setproducts(res.data)\r\n            })\r\n        }\r\n    }\r\n    const setColorFunc=(id)=>{\r\n        setfiltercolor(id);\r\n        if(filtercategory!=null){\r\n            fetchproduct({ filterArgs: { category_id: filtercategory, color_id: id } }).then(res => {\r\n                setproducts(res.data)\r\n            })\r\n        }\r\n        else {\r\n            fetchproduct({ filterArgs: { color_id: id } }).then(res => {\r\n                setproducts(res.data)\r\n            })\r\n        }\r\n    }\r\n    const allProductFunc=()=>{\r\n        fetchproduct().then(res=>{\r\n            setproducts(res.data)\r\n        })\r\n    }\r\n    console.log(products);\r\n    return (\r\n        <div style={{ width: \"95%\" }} className=\"row m-auto\">\r\n            <div className=\"col-md-2 col-sm-4\">\r\n                <button onClick={allProductFunc} className=\"btn btn-outline-primary myacountLink\">All Products</button>\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-outline-primary myacountLink dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        Category\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                        {categories.map(elem =>\r\n                            <button onClick={() => setCategoryFunc(elem._id)} className=\"btn btn-primary dropdown-item\" >{elem.category_name}</button>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-outline-primary myacountLink dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        Color\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                        {color.map(elem =>\r\n                            <button onClick={()=>setColorFunc(elem._id)} className=\"dropdown-item\" >{elem.color_name}</button>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-10 col-sm-8\">\r\n                <div className=\"row my-4 container m-auto\">\r\n                    {products.length > 0 ?\r\n                        products.map(elem =>\r\n                            <div key={elem._id} className=\"col-lg-4 productCard\">\r\n                                <div className=\"productCardInner\" style={{ width: \"19rem\" }}>\r\n                                    <img src={elem.product_image[0].base64} onClick={() => productDetailFunc(elem._id)} className=\"card-img-top m-auto\" height=\"180px\" width=\"100px\" alt=\"no image\" />\r\n                                    <div className=\"cardBody\">\r\n                                        <h5 className=\"cardTitle\">{elem.product_name}</h5>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <span className=\"productCardCost\">${elem.product_cost}</span>\r\n                                            <span className=\"productCardRating\">Rating: <span className=\"cardRatingValue\">{elem.product_rating}</span><i style={{ color: \"blue\", fontSize: \"20px\" }} className=\"fa fa-star\"></i></span>\r\n                                        </div>\r\n                                        <div>\r\n                                            <button onClick={() => addToCart(elem._id)} className=\"btn btn-primary productCardBtn\">Add to Cart</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>)\r\n                        : ''\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}